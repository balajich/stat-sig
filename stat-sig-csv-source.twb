<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Beer Hawk-data' inline='true' name='federated.04ey6bh1bfuhr41dut5g00huy7wg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Beer Hawk-data' name='textscan.1vebfh713k3say16yzwhg0pccqd7'>
            <connection class='textscan' directory='C:/code/stat-sig/data/raw/FB-Aggregation-Science' filename='Beer Hawk-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1vebfh713k3say16yzwhg0pccqd7' name='Beer Hawk-data.csv' table='[Beer Hawk-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='string' name='id_breaker' ordinal='1' />
            <column datatype='integer' name='ad_account_id' ordinal='2' />
            <column datatype='string' name='ad_account_name' ordinal='3' />
            <column datatype='string' name='dimension_type' ordinal='4' />
            <column datatype='string' name='dimension_value' ordinal='5' />
            <column datatype='integer' name='pulse_start_date' ordinal='6' />
            <column datatype='integer' name='pulse_end_date' ordinal='7' />
            <column datatype='integer' name='internal_id' ordinal='8' />
            <column datatype='string' name='cuts' ordinal='9' />
            <column datatype='integer' name='interval' ordinal='10' />
            <column datatype='date' name='interval_start_date' ordinal='11' />
            <column datatype='date' name='interval_end_date' ordinal='12' />
            <column datatype='date' name='int_pulse_start_date' ordinal='13' />
            <column datatype='date' name='int_pulse_end_date' ordinal='14' />
            <column datatype='integer' name='is_running_pulse' ordinal='15' />
            <column datatype='integer' name='control_reach' ordinal='16' />
            <column datatype='real' name='%CtrlReach' ordinal='17' />
            <column datatype='real' name='xMinReachFor1Conversion' ordinal='18' />
            <column datatype='real' name='ctrl_amount_spent_usd' ordinal='19' />
            <column datatype='real' name='ctrl_conv' ordinal='20' />
            <column datatype='real' name='ctrl_revenue' ordinal='21' />
            <column datatype='integer' name='test_reach' ordinal='22' />
            <column datatype='real' name='test_amount_spent_usd' ordinal='23' />
            <column datatype='integer' name='test_conv' ordinal='24' />
            <column datatype='real' name='test_revenue' ordinal='25' />
            <column datatype='integer' name='orders(lt)' ordinal='26' />
            <column datatype='real' name='orders(i)' ordinal='27' />
            <column datatype='real' name='revenue(lt)' ordinal='28' />
            <column datatype='real' name='revenue(i)' ordinal='29' />
            <column datatype='string' name='conversion_type' ordinal='30' />
            <column datatype='real' name='CR Test' ordinal='31' />
            <column datatype='real' name='CR Control' ordinal='32' />
            <column datatype='real' name='Base Conv' ordinal='33' />
            <column datatype='real' name='%inc' ordinal='34' />
            <column datatype='real' name='Std Error Test' ordinal='35' />
            <column datatype='real' name='St. Error Control' ordinal='36' />
            <column datatype='real' name='z score' ordinal='37' />
            <column datatype='real' name='P value' ordinal='38' />
            <column datatype='real' name='Normalised p Value' ordinal='39' />
            <column datatype='real' name='NormP*Reach' ordinal='40' />
            <column datatype='real' name='inc*NormP*reach' ordinal='41' />
            <column datatype='real' name='inc*Test Reach' ordinal='42' />
            <column datatype='real' name='Stat Sig' ordinal='43' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_breaker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id_breaker]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>id_breaker</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ad_account_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ad_account_id]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>ad_account_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ad_account_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ad_account_name]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>ad_account_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dimension_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dimension_type]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>dimension_type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dimension_value</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dimension_value]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>dimension_value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pulse_start_date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pulse_start_date]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>pulse_start_date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pulse_end_date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pulse_end_date]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>pulse_end_date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>internal_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[internal_id]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>internal_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuts</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cuts]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>cuts</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>interval</remote-name>
            <remote-type>20</remote-type>
            <local-name>[interval]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>interval</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>interval_start_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[interval_start_date]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>interval_start_date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>interval_end_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[interval_end_date]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>interval_end_date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>int_pulse_start_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[int_pulse_start_date]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>int_pulse_start_date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>int_pulse_end_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[int_pulse_end_date]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>int_pulse_end_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_running_pulse</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_running_pulse]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>is_running_pulse</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_reach</remote-name>
            <remote-type>20</remote-type>
            <local-name>[control_reach]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>control_reach</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%CtrlReach</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%CtrlReach]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>%CtrlReach</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xMinReachFor1Conversion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[xMinReachFor1Conversion]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>xMinReachFor1Conversion</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctrl_amount_spent_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctrl_amount_spent_usd]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>ctrl_amount_spent_usd</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctrl_conv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctrl_conv]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>ctrl_conv</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctrl_revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ctrl_revenue]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>ctrl_revenue</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>test_reach</remote-name>
            <remote-type>20</remote-type>
            <local-name>[test_reach]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>test_reach</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>test_amount_spent_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[test_amount_spent_usd]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>test_amount_spent_usd</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>test_conv</remote-name>
            <remote-type>20</remote-type>
            <local-name>[test_conv]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>test_conv</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>test_revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[test_revenue]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>test_revenue</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orders(lt)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orders(lt)]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>orders(lt)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orders(i)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[orders(i)]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>orders(i)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue(lt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revenue(lt)]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>revenue(lt)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue(i)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revenue(i)]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>revenue(i)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conversion_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conversion_type]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>conversion_type</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CR Test</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CR Test]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>CR Test</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CR Control</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CR Control]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>CR Control</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base Conv</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Base Conv]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>Base Conv</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%inc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%inc]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>%inc</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Std Error Test</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Std Error Test]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>Std Error Test</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>St. Error Control</remote-name>
            <remote-type>5</remote-type>
            <local-name>[St. Error Control]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>St. Error Control</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>z score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[z score]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>z score</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>P value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[P value]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>P value</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Normalised p Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Normalised p Value]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>Normalised p Value</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NormP*Reach</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NormP*Reach]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>NormP*Reach</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inc*NormP*reach</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inc*NormP*reach]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>inc*NormP*reach</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inc*Test Reach</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inc*Test Reach]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>inc*Test Reach</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stat Sig</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stat Sig]</local-name>
            <parent-name>[Beer Hawk-data.csv]</parent-name>
            <remote-alias>Stat Sig</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%Inc' datatype='real' name='[%inc]' role='measure' type='quantitative' />
      <column caption='tow' datatype='real' name='[Calculation_192810376305065986]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_231653922717171730] - COUNT([id_breaker]) - 1) / (SUM([Calculation_231653922715922445]) - (SUM([Calculation_231653922716069902]) / SUM([Calculation_231653922715922445])))' />
      </column>
      <column caption='w_adj' datatype='real' name='[Calculation_192810376431300612]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 / (MAX([Calculation_231653922711977994]) + ([Calculation_192810376305065986] *[Calculation_192810376305065986]))' />
      </column>
      <column caption='w_adj_log_rr' datatype='real' name='[Calculation_192810376433623045]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_192810376431300612]* MAX([Calculation_231653922710441993])' />
      </column>
      <column caption='zc_ctrl_conv' datatype='real' name='[Calculation_231653922704007169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN 0.5 ELSE [ctrl_conv] END' />
      </column>
      <column caption='zc_control_reach' datatype='integer' name='[Calculation_231653922704228354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN [control_reach] + 1 ELSE [control_reach] END' />
      </column>
      <column caption='zc_test_reach' datatype='integer' name='[Calculation_231653922704359427]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN [test_reach] + 1 ELSE [test_reach] END' />
      </column>
      <column caption='zc_test_conv' datatype='real' name='[Calculation_231653922704490500]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN [test_conv] + 0.5 ELSE [test_conv] END' />
      </column>
      <column caption='pc' datatype='real' name='[Calculation_231653922709520389]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_231653922704007169]/[Calculation_231653922704228354]' />
      </column>
      <column caption='pt' datatype='real' name='[Calculation_231653922709774342]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_231653922704490500] / [Calculation_231653922704359427]' />
      </column>
      <column caption='rr' datatype='real' name='[Calculation_231653922709962759]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_231653922709520389] /[Calculation_231653922709774342]' />
      </column>
      <column caption='inc' datatype='real' name='[Calculation_231653922710130696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 - [Calculation_231653922709962759]' />
      </column>
      <column caption='log_rr' datatype='real' name='[Calculation_231653922710441993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOG([Calculation_231653922709962759],2.718281)' />
      </column>
      <column caption='vari' datatype='real' name='[Calculation_231653922711977994]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 / [Calculation_231653922704007169]) - (1 / [Calculation_231653922704228354]) + (1 / [Calculation_231653922704490500]) - (1 / [Calculation_231653922704359427])' />
      </column>
      <column caption='ci_u' datatype='real' name='[Calculation_231653922712379403]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 - EXP([Calculation_231653922710441993] - (1.96 * SQRT([Calculation_231653922711977994])))' />
      </column>
      <column caption='ci_l' datatype='real' name='[Calculation_231653922712772620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 - EXP([Calculation_231653922710441993] + (1.96 * SQRT([Calculation_231653922711977994])))' />
      </column>
      <column caption='w' datatype='real' name='[Calculation_231653922715922445]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 / [Calculation_231653922711977994]' />
      </column>
      <column caption='w_sq' datatype='real' name='[Calculation_231653922716069902]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_231653922715922445] * [Calculation_231653922715922445]' />
      </column>
      <column caption='w_log_rr' datatype='real' name='[Calculation_231653922716323855]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_231653922715922445] * [Calculation_231653922710441993]' />
      </column>
      <column caption='log_rr_sq' datatype='real' name='[Calculation_231653922716532752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_231653922710441993] * [Calculation_231653922710441993]' />
      </column>
      <column caption='w_log_rr_sq' datatype='real' name='[Calculation_231653922716819473]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_231653922715922445] * [Calculation_231653922716532752]' />
      </column>
      <column caption='q' datatype='real' name='[Calculation_231653922717171730]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//{FIXED :SUM([w_log_rr_sq])}&#13;&#10;&#13;&#10;SUM([Calculation_231653922716819473])- (SUM([Calculation_231653922716323855])*SUM([Calculation_231653922716323855]))/SUM([Calculation_231653922715922445])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ad Account Id' datatype='integer' name='[ad_account_id]' role='dimension' type='ordinal' />
      <column caption='Ad Account Name' datatype='string' name='[ad_account_name]' role='dimension' type='nominal' />
      <column caption='Control Reach' datatype='integer' name='[control_reach]' role='measure' type='quantitative' />
      <column caption='Conversion Type' datatype='string' name='[conversion_type]' role='dimension' type='nominal' />
      <column caption='Ctrl Amount Spent Usd' datatype='real' name='[ctrl_amount_spent_usd]' role='measure' type='quantitative' />
      <column caption='Ctrl Conv' datatype='real' name='[ctrl_conv]' role='measure' type='quantitative' />
      <column caption='Ctrl Revenue' datatype='real' name='[ctrl_revenue]' role='measure' type='quantitative' />
      <column caption='Cuts' datatype='string' name='[cuts]' role='dimension' type='nominal' />
      <column caption='Dimension Type' datatype='string' name='[dimension_type]' role='dimension' type='nominal' />
      <column caption='Dimension Value' datatype='string' name='[dimension_value]' role='dimension' type='nominal' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column caption='Id Breaker' datatype='string' name='[id_breaker]' role='dimension' type='nominal' />
      <column caption='Int Pulse End Date' datatype='date' name='[int_pulse_end_date]' role='dimension' type='ordinal' />
      <column caption='Int Pulse Start Date' datatype='date' name='[int_pulse_start_date]' role='dimension' type='ordinal' />
      <column caption='Internal Id' datatype='integer' name='[internal_id]' role='dimension' type='ordinal' />
      <column caption='Interval' datatype='integer' name='[interval]' role='measure' type='quantitative' />
      <column caption='Interval End Date' datatype='date' name='[interval_end_date]' role='dimension' type='ordinal' />
      <column caption='Interval Start Date' datatype='date' name='[interval_start_date]' role='dimension' type='ordinal' />
      <column caption='Is Running Pulse' datatype='integer' name='[is_running_pulse]' role='measure' type='quantitative' />
      <column caption='Orders(I)' datatype='real' name='[orders(i)]' role='measure' type='quantitative' />
      <column caption='Orders(Lt)' datatype='integer' name='[orders(lt)]' role='measure' type='quantitative' />
      <column caption='Pulse End Date' datatype='integer' name='[pulse_end_date]' role='measure' type='quantitative' />
      <column caption='Pulse Start Date' datatype='integer' name='[pulse_start_date]' role='measure' type='quantitative' />
      <column caption='Revenue(I)' datatype='real' name='[revenue(i)]' role='measure' type='quantitative' />
      <column caption='Revenue(Lt)' datatype='real' name='[revenue(lt)]' role='measure' type='quantitative' />
      <column caption='Test Amount Spent Usd' datatype='real' name='[test_amount_spent_usd]' role='measure' type='quantitative' />
      <column caption='Test Conv' datatype='integer' name='[test_conv]' role='measure' type='quantitative' />
      <column caption='Test Reach' datatype='integer' name='[test_reach]' role='measure' type='quantitative' />
      <column caption='Test Revenue' datatype='real' name='[test_revenue]' role='measure' type='quantitative' />
      <column caption='Z Score' datatype='real' name='[z score]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.543568' measure-ordering='alphabetic' measure-percentage='0.456432' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Beer Hawk-data' name='federated.04ey6bh1bfuhr41dut5g00huy7wg' />
          </datasources>
          <datasource-dependencies datasource='federated.04ey6bh1bfuhr41dut5g00huy7wg'>
            <column caption='tow' datatype='real' name='[Calculation_192810376305065986]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_231653922717171730] - COUNT([id_breaker]) - 1) / (SUM([Calculation_231653922715922445]) - (SUM([Calculation_231653922716069902]) / SUM([Calculation_231653922715922445])))' />
            </column>
            <column caption='w_adj' datatype='real' name='[Calculation_192810376431300612]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 / (MAX([Calculation_231653922711977994]) + ([Calculation_192810376305065986] *[Calculation_192810376305065986]))' />
            </column>
            <column caption='zc_ctrl_conv' datatype='real' name='[Calculation_231653922704007169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN 0.5 ELSE [ctrl_conv] END' />
            </column>
            <column caption='zc_control_reach' datatype='integer' name='[Calculation_231653922704228354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN [control_reach] + 1 ELSE [control_reach] END' />
            </column>
            <column caption='zc_test_reach' datatype='integer' name='[Calculation_231653922704359427]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN [test_reach] + 1 ELSE [test_reach] END' />
            </column>
            <column caption='zc_test_conv' datatype='real' name='[Calculation_231653922704490500]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [ctrl_conv] == 0 THEN [test_conv] + 0.5 ELSE [test_conv] END' />
            </column>
            <column caption='pc' datatype='real' name='[Calculation_231653922709520389]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_231653922704007169]/[Calculation_231653922704228354]' />
            </column>
            <column caption='pt' datatype='real' name='[Calculation_231653922709774342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_231653922704490500] / [Calculation_231653922704359427]' />
            </column>
            <column caption='rr' datatype='real' name='[Calculation_231653922709962759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_231653922709520389] /[Calculation_231653922709774342]' />
            </column>
            <column caption='log_rr' datatype='real' name='[Calculation_231653922710441993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([Calculation_231653922709962759],2.718281)' />
            </column>
            <column caption='vari' datatype='real' name='[Calculation_231653922711977994]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 / [Calculation_231653922704007169]) - (1 / [Calculation_231653922704228354]) + (1 / [Calculation_231653922704490500]) - (1 / [Calculation_231653922704359427])' />
            </column>
            <column caption='w' datatype='real' name='[Calculation_231653922715922445]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 / [Calculation_231653922711977994]' />
            </column>
            <column caption='w_sq' datatype='real' name='[Calculation_231653922716069902]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_231653922715922445] * [Calculation_231653922715922445]' />
            </column>
            <column caption='w_log_rr' datatype='real' name='[Calculation_231653922716323855]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_231653922715922445] * [Calculation_231653922710441993]' />
            </column>
            <column caption='log_rr_sq' datatype='real' name='[Calculation_231653922716532752]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_231653922710441993] * [Calculation_231653922710441993]' />
            </column>
            <column caption='w_log_rr_sq' datatype='real' name='[Calculation_231653922716819473]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_231653922715922445] * [Calculation_231653922716532752]' />
            </column>
            <column caption='q' datatype='real' name='[Calculation_231653922717171730]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//{FIXED :SUM([w_log_rr_sq])}&#13;&#10;&#13;&#10;SUM([Calculation_231653922716819473])- (SUM([Calculation_231653922716323855])*SUM([Calculation_231653922716323855]))/SUM([Calculation_231653922715922445])' />
            </column>
            <column caption='Control Reach' datatype='integer' name='[control_reach]' role='measure' type='quantitative' />
            <column caption='Ctrl Conv' datatype='real' name='[ctrl_conv]' role='measure' type='quantitative' />
            <column caption='Dimension Value' datatype='string' name='[dimension_value]' role='dimension' type='nominal' />
            <column caption='Id Breaker' datatype='string' name='[id_breaker]' role='dimension' type='nominal' />
            <column-instance column='[dimension_value]' derivation='None' name='[none:dimension_value:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_231653922716819473]' derivation='Sum' name='[sum:Calculation_231653922716819473:qk]' pivot='key' type='quantitative' />
            <column caption='Test Conv' datatype='integer' name='[test_conv]' role='measure' type='quantitative' />
            <column caption='Test Reach' datatype='integer' name='[test_reach]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_192810376305065986]' derivation='User' name='[usr:Calculation_192810376305065986:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_192810376431300612]' derivation='User' name='[usr:Calculation_192810376431300612:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_231653922717171730]' derivation='User' name='[usr:Calculation_231653922717171730:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04ey6bh1bfuhr41dut5g00huy7wg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ey6bh1bfuhr41dut5g00huy7wg].[usr:Calculation_231653922717171730:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ey6bh1bfuhr41dut5g00huy7wg].[sum:Calculation_231653922716819473:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ey6bh1bfuhr41dut5g00huy7wg].[usr:Calculation_192810376305065986:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ey6bh1bfuhr41dut5g00huy7wg].[usr:Calculation_192810376431300612:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.04ey6bh1bfuhr41dut5g00huy7wg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.04ey6bh1bfuhr41dut5g00huy7wg].[usr:Calculation_231653922717171730:qk]&quot;</bucket>
              <bucket>&quot;[federated.04ey6bh1bfuhr41dut5g00huy7wg].[sum:Calculation_231653922716819473:qk]&quot;</bucket>
              <bucket>&quot;[federated.04ey6bh1bfuhr41dut5g00huy7wg].[usr:Calculation_192810376305065986:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.04ey6bh1bfuhr41dut5g00huy7wg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04ey6bh1bfuhr41dut5g00huy7wg].[:Measure Names]' value='112' />
            <format attr='text-format' field='[federated.04ey6bh1bfuhr41dut5g00huy7wg].[usr:Calculation_192810376305065986:qk]' value='n#,##0.000000;-#,##0.000000' />
            <format attr='text-format' field='[federated.04ey6bh1bfuhr41dut5g00huy7wg].[usr:Calculation_192810376431300612:qk]' value='n#,##0.00000000;-#,##0.00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.04ey6bh1bfuhr41dut5g00huy7wg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04ey6bh1bfuhr41dut5g00huy7wg].[none:dimension_value:nk]</rows>
        <cols>[federated.04ey6bh1bfuhr41dut5g00huy7wg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E6435D85-2A0F-4FD5-ABBB-BDE56F6755C1}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04ey6bh1bfuhr41dut5g00huy7wg].[:Measure Names]</field>
            <field>[federated.04ey6bh1bfuhr41dut5g00huy7wg].[none:dimension_value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07FB1704-3748-41BF-9A1F-E818E50EC897}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
